"use strict";(self.webpackChunkgahoochen_blog=self.webpackChunkgahoochen_blog||[]).push([[7685],{3221:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,e]of i)a[s]=e;return a}},9267:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>l,data:()=>h});var e=a(4089);const n={},l=(0,a(3221).A)(n,[["render",function(s,i){return(0,e.uX)(),(0,e.CE)("div",null,[...i[0]||(i[0]=[(0,e.Fv)('<h1 id="cmake基础教程" tabindex="-1"><a class="header-anchor" href="#cmake基础教程"><span>CMake基础教程</span></a></h1><p>CMake是一个跨平台的构建系统生成器，它可以使用简单的平台无关的配置文件来控制软件的编译过程，并生成可在多种编译器环境中使用的构建文件。CMake支持多种编程语言，尤其在C/C++项目中应用广泛。</p><h2 id="一、cmake概述" tabindex="-1"><a class="header-anchor" href="#一、cmake概述"><span>一、CMake概述</span></a></h2><h3 id="_1-1-什么是cmake" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是cmake"><span>1.1 什么是CMake？</span></a></h3><p>CMake是一个开源的、跨平台的构建系统生成器工具，它不直接构建软件，而是生成标准的构建文件（如Unix的Makefile、Windows的Visual Studio项目文件等），然后用户可以使用各自平台上的构建工具来编译代码。</p><h3 id="_1-2-cmake的特点" tabindex="-1"><a class="header-anchor" href="#_1-2-cmake的特点"><span>1.2 CMake的特点</span></a></h3><ul><li><strong>跨平台</strong>：支持Windows、Linux、macOS等多种操作系统</li><li><strong>生成多种构建系统</strong>：可生成Makefiles、Visual Studio项目、Xcode项目等</li><li><strong>简单易学的语法</strong>：使用类似于脚本的CMakeLists.txt文件进行配置</li><li><strong>良好的扩展性</strong>：支持模块化和第三方库的集成</li><li><strong>大型项目支持</strong>：适合管理大型复杂的软件项目</li></ul><h2 id="二、cmake安装" tabindex="-1"><a class="header-anchor" href="#二、cmake安装"><span>二、CMake安装</span></a></h2><h3 id="_2-1-windows安装" tabindex="-1"><a class="header-anchor" href="#_2-1-windows安装"><span>2.1 Windows安装</span></a></h3><ol><li>访问<a href="https://cmake.org/download/" target="_blank" rel="noopener noreferrer">CMake官方网站</a>下载Windows安装程序</li><li>运行安装程序，选择&quot;Add CMake to the system PATH for all users&quot;选项</li><li>完成安装后，可以在命令提示符中使用<code>cmake --version</code>验证安装</li></ol><h3 id="_2-2-linux安装" tabindex="-1"><a class="header-anchor" href="#_2-2-linux安装"><span>2.2 Linux安装</span></a></h3><p>在大多数Linux发行版中，可以使用包管理器安装CMake：</p><h4 id="ubuntu-debian" tabindex="-1"><a class="header-anchor" href="#ubuntu-debian"><span>Ubuntu/Debian</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="centos-rhel" tabindex="-1"><a class="header-anchor" href="#centos-rhel"><span>CentOS/RHEL</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="arch-linux" tabindex="-1"><a class="header-anchor" href="#arch-linux"><span>Arch Linux</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-3-macos安装" tabindex="-1"><a class="header-anchor" href="#_2-3-macos安装"><span>2.3 macOS安装</span></a></h3><p>可以使用Homebrew安装CMake：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以从官方网站下载安装包进行安装。</p><h2 id="三、cmake基础语法" tabindex="-1"><a class="header-anchor" href="#三、cmake基础语法"><span>三、CMake基础语法</span></a></h2><h3 id="_3-1-cmakelists-txt文件" tabindex="-1"><a class="header-anchor" href="#_3-1-cmakelists-txt文件"><span>3.1 CMakeLists.txt文件</span></a></h3><p>CMake使用名为CMakeLists.txt的配置文件来描述项目的构建过程。这个文件需要放置在源代码目录的根目录中。</p><h3 id="_3-2-基本命令" tabindex="-1"><a class="header-anchor" href="#_3-2-基本命令"><span>3.2 基本命令</span></a></h3><h4 id="指定cmake最低版本" tabindex="-1"><a class="header-anchor" href="#指定cmake最低版本"><span>指定CMake最低版本</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="设置项目名称" tabindex="-1"><a class="header-anchor" href="#设置项目名称"><span>设置项目名称</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject VERSION 1.0 LANGUAGES CXX)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="添加可执行文件" tabindex="-1"><a class="header-anchor" href="#添加可执行文件"><span>添加可执行文件</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyExecutable main.cpp file1.cpp file2.cpp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="添加库" tabindex="-1"><a class="header-anchor" href="#添加库"><span>添加库</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 静态库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyStaticLib STATIC src/library.cpp)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 动态库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MySharedLib SHARED src/library.cpp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="指定编译选项" tabindex="-1"><a class="header-anchor" href="#指定编译选项"><span>指定编译选项</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyExecutable PRIVATE -Wall -Wextra)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="设置包含目录" tabindex="-1"><a class="header-anchor" href="#设置包含目录"><span>设置包含目录</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyExecutable PRIVATE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">${PROJECT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/include)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="链接库" tabindex="-1"><a class="header-anchor" href="#链接库"><span>链接库</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyExecutable PRIVATE MyStaticLib)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句"><span>条件语句</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_BUILD_TYPE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> STREQUAL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Debug&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Building in Debug mode&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Building in Release mode&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、基本cmake项目结构" tabindex="-1"><a class="header-anchor" href="#四、基本cmake项目结构"><span>四、基本CMake项目结构</span></a></h2><h3 id="_4-1-简单项目结构" tabindex="-1"><a class="header-anchor" href="#_4-1-简单项目结构"><span>4.1 简单项目结构</span></a></h3><p>一个简单的CMake项目通常包含以下文件结构：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>MyProject/</span></span>\n<span class="line"><span>├── CMakeLists.txt</span></span>\n<span class="line"><span>├── main.cpp</span></span>\n<span class="line"><span>└── include/</span></span>\n<span class="line"><span>    └── myheader.h</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的CMakeLists.txt内容：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject VERSION 1.0 LANGUAGES CXX)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定C++标准</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加可执行文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject main.cpp)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置包含目录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">${PROJECT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/include)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-多目录项目结构" tabindex="-1"><a class="header-anchor" href="#_4-2-多目录项目结构"><span>4.2 多目录项目结构</span></a></h3><p>对于更复杂的项目，可以使用子目录和多个CMakeLists.txt文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>MyProject/</span></span>\n<span class="line"><span>├── CMakeLists.txt</span></span>\n<span class="line"><span>├── src/</span></span>\n<span class="line"><span>│   ├── CMakeLists.txt</span></span>\n<span class="line"><span>│   ├── main.cpp</span></span>\n<span class="line"><span>│   └── core/</span></span>\n<span class="line"><span>│       ├── CMakeLists.txt</span></span>\n<span class="line"><span>│       ├── core.cpp</span></span>\n<span class="line"><span>│       └── include/</span></span>\n<span class="line"><span>│           └── core.h</span></span>\n<span class="line"><span>├── include/</span></span>\n<span class="line"><span>│   └── myproject/</span></span>\n<span class="line"><span>│       └── version.h</span></span>\n<span class="line"><span>└── tests/</span></span>\n<span class="line"><span>    ├── CMakeLists.txt</span></span>\n<span class="line"><span>    └── test_core.cpp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根目录下的CMakeLists.txt：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject VERSION 1.0 LANGUAGES CXX)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定C++标准</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加子目录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(src)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tests)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>src目录下的CMakeLists.txt：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加子目录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(core)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加可执行文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject main.cpp)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置包含目录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ${PROJECT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/include</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/core/include</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 链接库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE CoreLib)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、cmake构建过程" tabindex="-1"><a class="header-anchor" href="#五、cmake构建过程"><span>五、CMake构建过程</span></a></h2><h3 id="_5-1-基本构建流程" tabindex="-1"><a class="header-anchor" href="#_5-1-基本构建流程"><span>5.1 基本构建流程</span></a></h3><p>CMake使用外部构建（out-of-source build）的方式，即在源代码目录外创建一个构建目录。这样做的好处是不会污染源代码目录，并且可以在同一台机器上使用不同的构建配置。</p><p>基本构建流程如下：</p><ol><li>创建构建目录</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>运行CMake配置</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 指定源代码目录</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>执行构建</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Unix/Linux/macOS\\cmake</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Windows (使用Visual Studio)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Release</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-常见构建选项" tabindex="-1"><a class="header-anchor" href="#_5-2-常见构建选项"><span>5.2 常见构建选项</span></a></h3><p>在运行CMake配置时，可以指定各种选项来控制构建过程：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定构建类型</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_BUILD_TYPE=Release</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定安装路径</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_INSTALL_PREFIX=/usr/local</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启用或禁用某些功能</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DBUILD_TESTING=ON</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DENABLE_FEATURE_X=OFF</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定编译器</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_C_COMPILER=gcc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_CXX_COMPILER=g++</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、cmake模块化" tabindex="-1"><a class="header-anchor" href="#六、cmake模块化"><span>六、CMake模块化</span></a></h2><h3 id="_6-1-使用find-package查找第三方库" tabindex="-1"><a class="header-anchor" href="#_6-1-使用find-package查找第三方库"><span>6.1 使用find_package查找第三方库</span></a></h3><p>CMake提供了<code>find_package</code>命令来查找系统中已安装的第三方库：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查找第三方库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find_package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(OpenCV REQUIRED)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果找到库，设置包含目录和链接库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(OpenCV_FOUND)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">${OpenCV_INCLUDE_DIRS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">${OpenCV_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-自定义模块" tabindex="-1"><a class="header-anchor" href="#_6-2-自定义模块"><span>6.2 自定义模块</span></a></h3><p>对于没有内置查找模块的库，可以创建自定义的CMake模块：</p><ol><li>在项目中创建一个cmake目录</li><li>将自定义的FindXXX.cmake文件放入该目录</li><li>在CMakeLists.txt中添加：</li></ol><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_MODULE_PATH</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/cmake)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="七、cmake实战示例" tabindex="-1"><a class="header-anchor" href="#七、cmake实战示例"><span>七、CMake实战示例</span></a></h2><h3 id="_7-1-简单c-项目" tabindex="-1"><a class="header-anchor" href="#_7-1-简单c-项目"><span>7.1 简单C++项目</span></a></h3><p>下面是一个简单的C++项目的完整CMakeLists.txt示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定CMake最低版本</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置项目信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(HelloWorld VERSION 1.0.0 LANGUAGES CXX)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定C++标准</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加可执行文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hello_world main.cpp)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置安装路径</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS hello_world DESTINATION bin)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-使用外部库的项目" tabindex="-1"><a class="header-anchor" href="#_7-2-使用外部库的项目"><span>7.2 使用外部库的项目</span></a></h3><p>下面是一个使用外部库（如Boost）的项目的CMakeLists.txt示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(BoostExample VERSION 1.0 LANGUAGES CXX)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 14)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查找Boost库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find_package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Boost 1.65 REQUIRED COMPONENTS filesystem </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加可执行文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(boost_example main.cpp)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置包含目录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(boost_example PRIVATE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">${Boost_INCLUDE_DIRS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 链接Boost库</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(boost_example PRIVATE Boost::filesystem Boost::</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="八、cmake高级技巧" tabindex="-1"><a class="header-anchor" href="#八、cmake高级技巧"><span>八、CMake高级技巧</span></a></h2><h3 id="_8-1-使用生成器表达式" tabindex="-1"><a class="header-anchor" href="#_8-1-使用生成器表达式"><span>8.1 使用生成器表达式</span></a></h3><p>生成器表达式允许在构建时根据条件设置编译选项、包含目录等：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    $&lt;$&lt;CXX_COMPILER_ID:GNU&gt;:-Wall -Wextra&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    $&lt;$&lt;CXX_COMPILER_ID:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">MSVC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;:/W4 /WX&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-配置头文件" tabindex="-1"><a class="header-anchor" href="#_8-2-配置头文件"><span>8.2 配置头文件</span></a></h3><p>CMake可以生成配置头文件，将CMake变量传递到源代码中：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 配置头文件</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/include/config.h.in</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ${CMAKE_CURRENT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/include/config.h</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加生成的头文件目录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">${CMAKE_CURRENT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/include)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的config.h.in文件：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> PROJECT_VERSION</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;@PROJECT_VERSION@&quot;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CMAKE_BUILD_TYPE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;@CMAKE_BUILD_TYPE@&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-3-构建类型和编译选项" tabindex="-1"><a class="header-anchor" href="#_8-3-构建类型和编译选项"><span>8.3 构建类型和编译选项</span></a></h3><p>根据不同的构建类型设置不同的编译选项：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmake"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 调试模式编译选项</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyProject PRIVATE </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    $&lt;$&lt;CONFIG:Debug&gt;:-g -O0&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    $&lt;$&lt;CONFIG:Release&gt;:-O3 -DNDEBUG&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="九、cmake最佳实践" tabindex="-1"><a class="header-anchor" href="#九、cmake最佳实践"><span>九、CMake最佳实践</span></a></h2><ol><li><strong>使用外部构建</strong>：始终在源代码目录外创建构建目录</li><li><strong>指定C++标准</strong>：明确指定项目所需的C++标准</li><li><strong>模块化组织</strong>：对于大型项目，使用子目录和多个CMakeLists.txt文件</li><li><strong>避免硬编码</strong>：使用CMake变量和生成器表达式，避免硬编码路径和选项</li><li>*<em>使用target_<em>命令</em></em>：优先使用target_include_directories、target_link_libraries等命令，而不是全局命令</li><li><strong>提供安装规则</strong>：使用install命令设置项目的安装规则</li><li><strong>添加测试</strong>：集成CTest框架，为项目添加单元测试</li></ol><h2 id="十、总结" tabindex="-1"><a class="header-anchor" href="#十、总结"><span>十、总结</span></a></h2><p>CMake是一个功能强大的跨平台构建系统生成器，它极大地简化了跨平台项目的构建过程。通过本文的介绍，我们了解了CMake的基础概念、语法和使用方法，以及一些高级技巧和最佳实践。掌握CMake对于开发跨平台C/C++项目非常重要，希望本文能够帮助你快速上手CMake并应用到实际项目中。</p>',99)])])}]]),h=JSON.parse('{"path":"/programming-languages/programming-tools/01-cmake-basics.html","title":"CMake基础教程","lang":"zh-CN","frontmatter":{"description":"CMake基础教程 CMake是一个跨平台的构建系统生成器，它可以使用简单的平台无关的配置文件来控制软件的编译过程，并生成可在多种编译器环境中使用的构建文件。CMake支持多种编程语言，尤其在C/C++项目中应用广泛。 一、CMake概述 1.1 什么是CMake？ CMake是一个开源的、跨平台的构建系统生成器工具，它不直接构建软件，而是生成标准的构...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CMake基础教程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-22T13:31:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GahooChen\\",\\"url\\":\\"https://gitee.com/GahooChen\\"}]}"],["meta",{"property":"og:url","content":"https://gahoochen.github.io/GahooChenBlog/programming-languages/programming-tools/01-cmake-basics.html"}],["meta",{"property":"og:site_name","content":"GahooChen的个人博客"}],["meta",{"property":"og:title","content":"CMake基础教程"}],["meta",{"property":"og:description","content":"CMake基础教程 CMake是一个跨平台的构建系统生成器，它可以使用简单的平台无关的配置文件来控制软件的编译过程，并生成可在多种编译器环境中使用的构建文件。CMake支持多种编程语言，尤其在C/C++项目中应用广泛。 一、CMake概述 1.1 什么是CMake？ CMake是一个开源的、跨平台的构建系统生成器工具，它不直接构建软件，而是生成标准的构..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-22T13:31:05.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-22T13:31:05.000Z"}]]},"git":{"createdTime":1758547865000,"updatedTime":1758547865000,"contributors":[{"name":"GahooChen","username":"GahooChen","email":"2432168423@qq.com","commits":1,"url":"https://github.com/GahooChen"}]},"readingTime":{"minutes":5.85,"words":1756},"filePathRelative":"programming-languages/programming-tools/01-cmake-basics.md","excerpt":"\\n<p>CMake是一个跨平台的构建系统生成器，它可以使用简单的平台无关的配置文件来控制软件的编译过程，并生成可在多种编译器环境中使用的构建文件。CMake支持多种编程语言，尤其在C/C++项目中应用广泛。</p>\\n<h2>一、CMake概述</h2>\\n<h3>1.1 什么是CMake？</h3>\\n<p>CMake是一个开源的、跨平台的构建系统生成器工具，它不直接构建软件，而是生成标准的构建文件（如Unix的Makefile、Windows的Visual Studio项目文件等），然后用户可以使用各自平台上的构建工具来编译代码。</p>\\n<h3>1.2 CMake的特点</h3>\\n<ul>\\n<li><strong>跨平台</strong>：支持Windows、Linux、macOS等多种操作系统</li>\\n<li><strong>生成多种构建系统</strong>：可生成Makefiles、Visual Studio项目、Xcode项目等</li>\\n<li><strong>简单易学的语法</strong>：使用类似于脚本的CMakeLists.txt文件进行配置</li>\\n<li><strong>良好的扩展性</strong>：支持模块化和第三方库的集成</li>\\n<li><strong>大型项目支持</strong>：适合管理大型复杂的软件项目</li>\\n</ul>","autoDesc":true}')}}]);