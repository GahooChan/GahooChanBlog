"use strict";(self.webpackChunkgahoochen_blog=self.webpackChunkgahoochen_blog||[]).push([[524],{939:(i,s,a)=>{a.d(s,{B:()=>H});var n={};a.r(n),a.d(n,{default:()=>y});var l={};a.r(l);var t={};a.r(t);var h={};a.r(h),a.d(h,{default:()=>o});var e={};a.r(e);var k={};a.r(k),a.d(k,{default:()=>v});var p={};a.r(p),a.d(p,{default:()=>b});var r={};a.r(r);var d={};a.r(d);var g={};a.r(g),a.d(g,{default:()=>J});var A={};a.r(A),a.d(A,{default:()=>O});var c={};a.r(c),a.d(c,{default:()=>$});var B=a(9345);const y={enhance:({app:i})=>{i.component("GitContributors",B.B)}},o=(0,a(4898).re)({enhance:({app:i})=>{}});var m=a(5214),F=a(6063),u=a(3718);const v={enhance:({app:i})=>{i.component("CodeTabs",F.S),i.component("Tabs",u.t)}};var C=a(5770),D=a(5058);const b={enhance:({app:i})=>{i.component("CodeDemo",C.A),i.component("MdDemo",D.A)}};var f=a(4937),E=a(829),x=a(9478),w=a(7481),T=a(1625),L=a(4089),S=a(1817);const J={enhance:({app:i})=>{(0,w.L)("VPIcon")||i.component("VPIcon",i=>(0,L.h)(S.G,{type:"iconify",prefix:"fa6-solid:",...i}))},setup:()=>{(0,T.r9V)("https://cdn.jsdelivr.net/npm/iconify-icon@2")}};var P=a(1618),G=a(283),N=a(5906);a(2055);const O={enhance:({app:i})=>{(0,w.L)("Badge")||i.component("Badge",G.A),(0,w.L)("VPCard")||i.component("VPCard",N.A)},setup:()=>{},rootComponents:[]};var z=a(280),W=a(6602),j=a(4142),I=a(196),M=a(9441),V=a(7884),_=a(9601),R=a(1090),U=a(388),q=a(660);a(2598),a(8977),a(184),a(393),(0,R.M_)(i=>{const s=i.title,a=i.index??!0,n=i.icon;return a?{title:s,content:n?()=>[(0,L.h)((0,L.g2)("VPIcon"),{icon:n,sizing:"both"}),s]:null,order:i.order,index:i.index}:null});const $={enhance:({app:i,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...i)=>(await M.s.wait(),a(...i)),(0,V.i)(i),i.component("BloggerInfo",U.l),i.component("SocialMedias",U.k)},setup:()=>{(0,V.s)(),(0,V.a)(),(0,q.su)()},layouts:{Layout:_.L,NotFound:_.N,Blog:U.B}},H=[n,l,t,h,e,m,k,p,r,d,f,E,x,g,P,A,z,W,j,I,c].map(i=>i.default).filter(Boolean)},1709:(i,s,a)=>{a.d(s,{l:()=>n});const n=JSON.parse('{"category":{"/":{"path":"/category/","map":{}}},"tag":{"/":{"path":"/tag/","map":{}}}}')},2878:(i,s,a)=>{a.d(s,{P:()=>n});const n={}},3781:(i,s,a)=>{a.d(s,{U:()=>n});const n=JSON.parse('{"article":{"/":{"path":"/article/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}},"star":{"/":{"path":"/star/","indexes":[]}},"timeline":{"/":{"path":"/timeline/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}}}')},4776:(i,s,a)=>{a.d(s,{M:()=>n});const n=JSON.parse('["/programming-languages/c/01-first-program.html","/programming-languages/c/02-variables-data-types.html","/programming-languages/c/03-operators.html","/programming-languages/c/04-control-statements.html","/programming-languages/c/05-loops.html","/programming-languages/c/06-practice-summary.html","/programming-languages/c/07-functions-arrays.html","/programming-languages/c/08-practice-functions-arrays.html","/programming-languages/c/09-pointers-basics.html","/programming-languages/c/10-memory-management.html","/programming-languages/c/11-algorithm-basics.html","/programming-languages/c/12-structs-unions.html","/programming-languages/c/13-file-io.html","/programming-languages/c/14-sorting-algorithms.html","/programming-languages/c/15-searching-algorithms.html","/problems/","/programming-languages/","/programming-languages/cpp/","/programming-languages/c/","/programming-languages/csharp/","/programming-languages/java/","/programming-languages/python/","/intro.html"]')},4923:(i,s,a)=>{},6653:(i,s,a)=>{a.d(s,{K:()=>n});const n=JSON.parse('{"encrypt":{},"author":{"name":"GahooChen","url":"https://gitee.com/GahooChen"},"logo":"/avatar/GahooChen.png","docsDir":"src","footer":"GahooChen的个人博客","displayFooter":true,"blog":{"description":"一个软件工程师，主C++，熟悉Qt、MFC、CLR，C#，Python，Java等等主流编程语言也略懂一二，都做过一些项目","intro":"/intro.html","medias":{}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routerLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/",{"text":"个人简介","icon":"user","link":"/intro.md"},{"text":"开发问题记录与分享","icon":"bug","link":"/problems/"},{"text":"编程语言基础与算法学习","icon":"code","link":"/programming-languages/"}],"sidebar":{"/":["",{"text":"文章","icon":"book","prefix":"posts/","children":"structure"},"intro",{"text":"开发问题记录与分享","icon":"bug","prefix":"problems/","children":"structure"},{"text":"编程语言基础与算法学习","icon":"code","prefix":"programming-languages/","children":["",{"text":"C语言","icon":"c","prefix":"c/","children":["","01-first-program","02-variables-data-types","03-operators","04-control-statements","05-loops","06-practice-summary","07-functions-arrays","08-practice-functions-arrays","09-pointers-basics","10-memory-management","11-algorithm-basics","12-structs-unions","13-file-io","14-sorting-algorithms","15-searching-algorithms"]},{"text":"C++","icon":"cpp","prefix":"cpp/","children":"structure"},{"text":"C#","icon":"csharp","prefix":"csharp/","children":"structure"},{"text":"Java","icon":"java","prefix":"java/","children":"structure"},{"text":"Python","icon":"python","prefix":"python/","children":"structure"}]}]}}}}')},8123:(i,s,a)=>{a.d(s,{v:()=>n});const n={"/posts/":[],"/problems/":[""],"/programming-languages/cpp/":[""],"/programming-languages/csharp/":[""],"/programming-languages/java/":[""],"/programming-languages/python/":[""]}},8164:(i,s,a)=>{a.d(s,{J:()=>l,c:()=>n});const n=JSON.parse("{}"),l=Object.fromEntries([["/",{loader:()=>a.e(470).then(a.bind(a,1532)),meta:{title:"GahooChen的个人博客",icon:"house"}}],["/intro.html",{loader:()=>a.e(912).then(a.bind(a,2170)),meta:{date:1757856526e3,excerpt:"<h2>👋 你好，我是GahooChen</h2>\n<p>一名热爱技术、热衷于解决实际问题的软件工程师。这个博客用于记录我的开发历程，分享技术心得与解决方案，同时也希望能够帮助到更多在技术道路上探索的同行。</p>\n<h2>🎓 教育背景</h2>\n<ul>\n<li><strong>毕业院校</strong>：某国内大专院校</li>\n<li><strong>学历</strong>：大专</li>\n<li><strong>专业</strong>：物联网应用技术</li>\n<li><strong>主要课程</strong>：数据结构、操作系统、计算机网络、数据库原理、C/C++程序设计、Java程序设计等</li>\n<li><strong>荣誉奖项</strong>：大学期间积极参加各类技能竞赛，获得多项省级和国家级奖项，最高荣誉为全国二等奖（工业自动化系统开发方向，智能家居系统开发方向）</li>\n</ul>",readingTime:{minutes:4.17,words:1251},title:"个人介绍",icon:"circle-info",type:"article"}}],["/problems/",{loader:()=>a.e(99).then(a.bind(a,6228)),meta:{date:1757861894e3,excerpt:"\n<p>欢迎来到我的开发问题记录与分享专区！</p>\n<p>在软件开发的道路上，我们经常会遇到各种各样的技术难题和挑战。这个专区将记录我在日常开发过程中遇到的典型问题、解决方案以及心得体会，希望能够帮助到其他开发者。</p>\n<h2>内容分类</h2>\n<h3>🔧 编程错误与调试</h3>\n<p>记录在编码过程中遇到的各类错误信息、调试方法和解决方案。</p>\n<h3>🌐 网络与API</h3>\n<p>分享网络请求、API调用、接口调试等方面的经验和技巧。</p>\n<h3>🗃️ 数据库与存储</h3>\n<p>涵盖数据库设计、查询优化、数据迁移等相关内容。</p>\n<h3>🚀 性能优化</h3>",readingTime:{minutes:1.19,words:357},title:"开发问题记录与分享",type:"article"}}],["/programming-languages/",{loader:()=>a.e(962).then(a.bind(a,4369)),meta:{date:1757861894e3,excerpt:"\n<p>欢迎来到面向新手的编程语言基础语法与算法学习专区！</p>\n<p>本专区旨在为编程初学者提供系统、易懂的编程语言基础教程和算法学习资料。无论你是刚刚入门的编程新手，还是想要巩固基础知识的开发者，这里都能找到适合你的学习内容。</p>\n<h2>编程语言分类</h2>\n<h3>📚 C语言</h3>\n<p>C语言是一种广泛使用的计算机编程语言，是许多其他编程语言的基础。</p>\n<h3>🚀 C++</h3>\n<p>C++是一种功能强大的编程语言，结合了高级特性和低级控制能力。</p>\n<h3>💻 C#</h3>\n<p>C#是微软开发的一种现代、面向对象的编程语言，特别适合Windows平台开发。</p>",readingTime:{minutes:1.46,words:439},title:"编程语言基础与算法学习",type:"article"}}],["/programming-languages/cpp/",{loader:()=>a.e(208).then(a.bind(a,9813)),meta:{date:1757861894e3,excerpt:"\n<p>C++是一种功能强大的编程语言，由比雅尼·斯特劳斯特鲁普（Bjarne Stroustrup）于1983年在贝尔实验室开发。它是C语言的扩展，添加了面向对象编程特性和其他现代编程功能。</p>\n<h2>C++特点</h2>\n<ul>\n<li><strong>兼容C语言</strong>：可以直接使用C语言代码和库</li>\n<li><strong>面向对象</strong>：支持封装、继承和多态</li>\n<li><strong>泛型编程</strong>：通过模板实现通用算法和数据结构</li>\n<li><strong>高效性</strong>：保留了C语言的高效性，同时提供了更高级的抽象</li>\n<li><strong>丰富的标准库</strong>：包含容器、算法、输入输出等功能</li>\n</ul>",readingTime:{minutes:1.41,words:423},title:"C++基础学习",type:"article"}}],["/programming-languages/c/01-first-program.html",{loader:()=>a.e(811).then(a.bind(a,5488)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们学说话的时候，是不是先学喊"爸爸妈妈"，然后才能说更多的话呢？学习C语言也是一样的道理！这一节我们要学习如何编写你的第一个C语言程序。</p>\n<h2>你好，世界！</h2>\n<p>让我们先来看一个最简单的C语言程序，就像你学写的第一个字一样：</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"你好，世界！</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:2.45,words:735},title:"01. 第一个C语言程序：向世界问好",type:"article"}}],["/programming-languages/c/02-variables-data-types.html",{loader:()=>a.e(953).then(a.bind(a,9741)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们有没有自己的小抽屉或者小盒子用来放各种各样的东西？比如，铅笔盒放铅笔，玩具箱放玩具，存钱罐放零花钱。在C语言中，我们也有类似的"小盒子"，它们叫做变量。</p>\n<h2>变量：计算机的小盒子</h2>\n<p>变量就像计算机里的小盒子，用来存放各种信息。比如，你可以用一个小盒子存放你的年龄，用另一个小盒子存放你的身高。</p>\n<p>在C语言中，我们需要告诉计算机这个小盒子要装什么类型的东西：</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 整数类型的变量，存放年龄</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> height </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 145.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 小数类型的变量，存放身高</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> grade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'A\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 字符类型的变量，存放成绩等级</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:3.64,words:1093},title:"02. 变量和数据类型：计算机的收纳盒",type:"article"}}],["/programming-languages/c/03-operators.html",{loader:()=>a.e(735).then(a.bind(a,2463)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们平时做数学题的时候是不是会用到加减乘除这些运算符号？在C语言中，我们也有各种各样的运算符，它们就像是计算机的计算器，可以帮我们做各种计算。</p>\n<h2>算术运算符：数学计算</h2>\n<p>算术运算符就是我们平时数学中用到的加减乘除等运算符号：</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> b;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         // 加法：sum = 13</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> difference </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> b;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 减法：difference = 7</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> product </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> b;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 乘法：product = 30</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> quotient </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> b;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 除法：quotient = 3（注意：整数相除会去掉小数部分）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> remainder </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> b;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   // 取余：remainder = 1（10除以3余1）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:3.99,words:1198},title:"03. 运算符：计算机的计算器",type:"article"}}],["/programming-languages/c/04-control-statements.html",{loader:()=>a.e(221).then(a.bind(a,679)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们在生活中是不是会根据不同的情况做不同的决定呢？比如，如果天气好，你可能会去公园玩；如果下雨，你可能会留在家里看书。在C语言中，我们也可以让程序根据不同的条件做不同的事情，这就是控制语句的作用。</p>\n<h2>if语句：如果...就...</h2>\n<p><code>if</code>语句是最基本的控制语句，它的用法就像我们平时说的"如果...就..."一样：</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> score </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (score </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 90</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"优秀！</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (score </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"良好！</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (score </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"及格！</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"加油！</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:3.15,words:944},title:"04. 控制语句：让程序做决定",type:"article"}}],["/programming-languages/c/05-loops.html",{loader:()=>a.e(503).then(a.bind(a,5514)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们有没有过需要重复做某件事情的经历？比如，每天早晨起床、刷牙、洗脸，这些都是重复的事情。在C语言中，我们也经常需要让计算机重复做某件事情，这时候就可以使用循环语句。</p>\n<h2>while循环：当...的时候就继续做</h2>\n<p><code>while</code>循环的作用是：当某个条件为真时，就重复执行一段代码。它的基本结构是这样的：</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (条件) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 要重复执行的代码</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:3.98,words:1194},title:"05. 循环语句：重复做一件事",type:"article"}}],["/programming-languages/c/06-practice-summary.html",{loader:()=>a.e(161).then(a.bind(a,8704)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，现在我们已经学习了C语言的一些基础语法知识。让我们通过一些小练习来巩固一下所学的内容吧！</p>\n<h2>实战小练习</h2>\n<h3>练习1：计算1到100的和</h3>\n<p>让我们写一个程序来计算1到100的所有整数的和。这是一个经典的循环练习。</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 用来存储和</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 使用for循环计算1到100的和</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1到100的和是：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, sum);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:5.42,words:1626},title:"06. 实战小练习与基础语法小结",type:"article"}}],["/programming-languages/c/07-functions-arrays.html",{loader:()=>a.e(870).then(a.bind(a,8316)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们有没有玩过搭积木？函数就像是已经拼好的积木块，可以反复使用；而数组就像是一排相同大小的盒子，可以整齐地存放很多东西。这一节我们来学习如何使用函数和数组让我们的程序变得更加有条理！</p>\n<h2>函数：可以重复使用的代码块</h2>\n<p>你们有没有发现，有时候我们在程序中会多次用到相同的代码？这时候就可以把这些代码封装成一个函数，就像把常用的积木块提前拼好一样。</p>\n<h3>函数的定义与调用</h3>\n<p>让我们来看一个计算长方形面积的函数：</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 函数定义：计算长方形的面积</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> area </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> length </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> width;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> area;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 返回计算结果</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> roomLength </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> roomWidth </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> classroomLength </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> classroomWidth </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 调用函数计算房间面积</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> roomArea </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(roomLength, roomWidth);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"房间的面积是：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">平方米</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, roomArea);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 再次调用函数计算教室面积</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> classroomArea </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(classroomLength, classroomWidth);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"教室的面积是：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">平方米</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, classroomArea);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:4.87,words:1462},title:"07. 函数与数组：让程序更有条理",type:"article"}}],["/programming-languages/c/08-practice-functions-arrays.html",{loader:()=>a.e(997).then(a.bind(a,2129)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，上一节课我们学习了函数与数组的基础知识，现在让我们通过一些有趣的练习来巩固这些知识吧！这些练习就像是游戏中的关卡，完成它们可以帮助你更好地掌握编程技能！</p>\n<h2>练习一：计算数组的和与平均值</h2>\n<p>让我们来编写一个程序，计算一个数组中所有元素的和与平均值。我们可以定义一个函数来计算和，再定义另一个函数来计算平均值。</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 计算数组中所有元素的和</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateSum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> numbers</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> size; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> numbers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[i];</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sum;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 计算数组中所有元素的平均值</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateAverage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> numbers</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateSum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(numbers, size);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> size;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> scores</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">85</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">92</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">78</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">90</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">88</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> size </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sum </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateSum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(scores, size);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> average </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calculateAverage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(scores, size);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"数组元素的和：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, sum);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"数组元素的平均值：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%.2f</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, average);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:4.65,words:1396},title:"08. 函数与数组练习：巩固你的编程技能",type:"article"}}],["/programming-languages/c/09-pointers-basics.html",{loader:()=>a.e(330).then(a.bind(a,3882)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们有没有想过，当我们在电脑上玩游戏、看视频或者写作业的时候，电脑是怎么记住这些信息的呢？今天我们要一起来探索计算机的"小仓库"——内存，以及如何用指针来访问这个仓库！</p>\n<h2>内存是什么？</h2>\n<p>内存就像计算机的小仓库，用来临时存放正在使用的信息。当我们打开一个程序时，这个程序就被加载到内存中；当我们关闭程序时，这个程序占用的内存就会被释放出来，留给其他程序使用。</p>\n<p>想象一下，内存就像一个巨大的储物柜，里面有许多小格子，每个小格子都有一个唯一的编号（地址），每个小格子可以存放一些信息。</p>\n<h2>指针：指向内存的标签</h2>\n<p>指针就像是贴在储物柜上的标签，它告诉我们某个东西存放在哪个格子里。在C语言中，指针是一个变量，但它不像普通变量那样存储数据本身，而是存储数据在内存中的地址。</p>',readingTime:{minutes:4.05,words:1216},title:"09. 指针基础：指向内存的标签",type:"article"}}],["/programming-languages/c/10-memory-management.html",{loader:()=>a.e(75).then(a.bind(a,3209)),meta:{date:1758206476e3,excerpt:"\n<p>小朋友们，上一节课我们学习了指针的基础知识，知道了指针是指向内存地址的标签。这一节课，我们要学习如何在程序运行时动态地管理内存空间，就像我们可以根据需要随时调整储物柜的大小一样！</p>\n<h2>为什么需要动态内存分配？</h2>\n<p>在之前的学习中，我们使用的变量和数组都是在程序编译时就确定了大小的。但有时候，我们在编写程序时并不知道需要使用多少内存。比如，当我们要编写一个成绩管理系统时，我们可能不知道会有多少学生的成绩需要存储。</p>\n<p>这时候，动态内存分配就派上用场了！它让我们可以在程序运行时根据实际需要申请和释放内存空间。</p>\n<h2>动态内存分配的函数</h2>\n",readingTime:{minutes:4.9,words:1471},title:"10. 内存管理：按需使用仓库空间",type:"article"}}],["/programming-languages/c/11-algorithm-basics.html",{loader:()=>a.e(386).then(a.bind(a,9816)),meta:{date:1758206476e3,excerpt:"\n<p>小朋友们，你们有没有想过，为什么计算机能够如此快速地完成各种复杂的任务？这不仅仅是因为计算机的硬件很强大，还因为计算机运行的程序中包含了各种聪明的算法！今天，我们就来学习一下算法的基础知识。</p>\n<h2>什么是算法？</h2>\n<p>算法是解决问题的步骤和方法，就像我们日常生活中做事的步骤一样。例如，当我们想要泡一杯奶茶时，我们需要：</p>\n<ol>\n<li>准备材料：奶茶粉、热水、杯子、勺子</li>\n<li>将奶茶粉倒入杯子中</li>\n<li>倒入适量的热水</li>\n<li>用勺子搅拌均匀</li>\n<li>一杯美味的奶茶就做好了</li>\n</ol>\n<p>这就是一个简单的算法！在计算机中，算法就是告诉计算机如何解决某个问题的一系列步骤。</p>",readingTime:{minutes:5.8,words:1740},title:"11. 算法基础：让计算机更聪明地解决问题",type:"article"}}],["/programming-languages/c/12-structs-unions.html",{loader:()=>a.e(879).then(a.bind(a,8478)),meta:{date:1758206476e3,excerpt:'\n<p>小朋友们，你们有没有整理过自己的书包？把课本放在一起，笔记本放在一起，铅笔、橡皮等文具放在铅笔盒里。在C语言中，我们也可以用结构体和共用体来整理不同类型的数据，让我们的程序更加有条理！</p>\n<h2>结构体：把不同类型的数据打包在一起</h2>\n<p>结构体就像是一个"数据打包盒"，可以把不同类型的数据放在一起。比如，我们可以用一个结构体来表示一个学生的信息，包括姓名、年龄、身高、成绩等。</p>\n<h3>结构体的定义与使用</h3>\n<p>让我们来看一个表示学生信息的结构体例子：</p>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;string.h&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 定义一个名为Student的结构体</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Student {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    char</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 姓名</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> age;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">       // 年龄</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> height;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 身高</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> score;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">   // 成绩</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 创建一个Student类型的变量</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Student stu1;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 给结构体成员赋值</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    strcpy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"小明"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 注意：字符串需要使用strcpy函数赋值</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 145.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">score</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 92.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 访问结构体成员</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"姓名：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"年龄：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">岁</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"身高：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%.1f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">厘米</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"成绩：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%.1f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">分</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">score</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 也可以在定义结构体变量的同时进行初始化</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Student stu2 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"小红"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">142.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">88.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">另一个学生的信息：</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"姓名：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"年龄：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">岁</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"身高：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%.1f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">厘米</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"成绩：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%.1f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">分</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">stu2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">score</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:7.46,words:2238},title:"12. 结构体与共用体：整理你的数据",type:"article"}}],["/programming-languages/c/13-file-io.html",{loader:()=>a.e(442).then(a.bind(a,5982)),meta:{date:1758206476e3,excerpt:"\n<p>小朋友们，你们有没有写过日记或者画过画？当你写完日记或者画完画后，你会把它们保存起来，这样以后还可以再看。在C语言中，我们也可以让程序把数据保存到文件中，或者从文件中读取数据。这一节我们就来学习文件操作！</p>\n<h2>文件是什么？</h2>\n<p>文件是存储在计算机存储设备（如硬盘、U盘等）上的一组相关数据的集合。我们平时使用的文档、图片、音乐、视频等都是文件。</p>\n<p>在C语言中，文件可以分为两种类型：</p>\n<ol>\n<li><strong>文本文件</strong>：存储的是字符，可以用记事本等文本编辑器打开查看（就像你写的日记）</li>\n<li><strong>二进制文件</strong>：存储的是二进制数据，需要特定的程序才能打开查看（就像你画的画或者拍的照片）</li>\n</ol>",readingTime:{minutes:7.99,words:2397},title:"13. 文件操作：让程序记住你的数据",type:"article"}}],["/programming-languages/c/14-sorting-algorithms.html",{loader:()=>a.e(825).then(a.bind(a,215)),meta:{date:1758206476e3,excerpt:"\n<p>小朋友们，你们有没有整理过自己的玩具柜？把积木按颜色分类，把拼图按大小排列，或者把绘本按顺序放在书架上。在计算机中，我们也经常需要整理数据，比如按成绩高低排列学生名单，按价格排序商品列表等。这时候，排序算法就派上用场了！</p>\n<h2>什么是排序算法？</h2>\n<p>排序算法就是一种让计算机按照一定的顺序（如从小到大、从大到小、按字母顺序等）排列数据的方法。就像你整理玩具的方法有很多种一样，计算机排序的方法也有很多种，每种方法都有自己的特点和适用场景。</p>\n<h2>常见的排序算法</h2>\n<h3>冒泡排序：像气泡一样往上冒</h3>\n<p>冒泡排序是一种简单的排序算法，它的工作原理就像气泡在水中往上冒一样：比较相邻的两个元素，如果它们的顺序错误就交换它们，直到没有再需要交换的元素为止。</p>",readingTime:{minutes:9.06,words:2718},title:"14. 排序算法：让计算机帮你整理东西",type:"article"}}],["/programming-languages/c/15-searching-algorithms.html",{loader:()=>a.e(300).then(a.bind(a,2150)),meta:{date:1758206476e3,excerpt:"\n<p>小朋友们，你们有没有在玩具堆里找过自己最喜欢的那个玩具？或者在书架上找过一本特定的书？在计算机中，我们也经常需要从大量的数据中找出我们需要的那部分数据。这时候，查找算法就派上用场了！</p>\n<h2>什么是查找算法？</h2>\n<p>查找算法就是一种让计算机从大量的数据中找到特定数据的方法。就像你找东西的方法有很多种一样，计算机查找的方法也有很多种，每种方法都有自己的特点和适用场景。</p>\n<h2>常见的查找算法</h2>\n<h3>线性查找：一个一个找</h3>\n<p>线性查找，也叫顺序查找，是最简单的查找算法。它的工作原理是：从数据的一端开始，一个一个地检查每个元素，直到找到目标元素或者检查完所有元素。</p>",readingTime:{minutes:9.83,words:2948},title:"15. 查找算法：让计算机帮你找东西",type:"article"}}],["/programming-languages/c/",{loader:()=>a.e(936).then(a.bind(a,2487)),meta:{date:1757861894e3,excerpt:'\n<p>你好呀！欢迎来到C语言的奇妙世界！C语言就像是一种和计算机对话的特殊语言，由一位叫丹尼斯·里奇的叔叔在1970年代发明。它可厉害了，现在我们用的很多编程语言（像C++、Java、Python）都是从C语言这里学的本事呢！</p>\n<h2>为什么说C语言很特别？</h2>\n<p>想象一下，C语言就像是一个既能和计算机"亲密交流"又能让人类容易理解的翻译官：</p>\n<ul>\n<li><strong>跑得飞快</strong>：C语言能直接告诉计算机怎么使用内存，所以程序运行得特别快</li>\n<li><strong>到处都能用</strong>：用C语言写的程序，能在不同的电脑上运行（就像你的玩具能在客厅也能在卧室玩一样）</li>\n<li><strong>功能超丰富</strong>：C语言有很多"小工具"（运算符和数据类型），能帮你做各种各样的事情</li>\n<li><strong>简单又灵活</strong>：C语言的语法就像简单的积木，可以搭出千变万化的形状</li>\n</ul>',readingTime:{minutes:3.15,words:944},title:"C语言入门：和计算机交朋友的神奇语言",type:"article"}}],["/programming-languages/csharp/",{loader:()=>a.e(448).then(a.bind(a,158)),meta:{date:1757861894e3,excerpt:'\n<p>C#（发音为"See Sharp"）是微软开发的一种现代、面向对象的编程语言，由安德斯·海尔斯伯格（Anders Hejlsberg）领导的团队设计。它结合了C++的强大功能和Visual Basic的易用性，特别适合Windows平台开发。</p>\n<h2>C#特点</h2>\n<ul>\n<li><strong>简单易学</strong>：语法清晰，减少了许多常见的编程错误</li>\n<li><strong>面向对象</strong>：全面支持面向对象编程概念</li>\n<li><strong>类型安全</strong>：强类型系统，减少运行时错误</li>\n<li><strong>跨平台</strong>：<a href="http://xn--863a9f.NET" target="_blank" rel="noopener noreferrer">通过.NET</a> Core可以在Windows、macOS和Linux上运行</li>\n<li><strong>丰富的类库</strong>：提供了大量现成的功能和API</li>\n</ul>',readingTime:{minutes:1.37,words:410},title:"C#基础学习",type:"article"}}],["/programming-languages/java/",{loader:()=>a.e(567).then(a.bind(a,7003)),meta:{date:1757861894e3,excerpt:'\n<p>Java是一种广泛使用的计算机编程语言，由詹姆斯·高斯林（James Gosling）领导的Sun Microsystems团队于1995年开发。Java以其"一次编写，到处运行"（Write Once, Run Anywhere）的跨平台特性而闻名。</p>\n<h2>Java特点</h2>\n<ul>\n<li><strong>跨平台性</strong>：Java程序可以在任何带有JVM（Java虚拟机）的平台上运行</li>\n<li><strong>面向对象</strong>：Java是一种纯面向对象的编程语言</li>\n<li><strong>安全性</strong>：内置了安全管理器，提供安全API</li>\n<li><strong>健壮性</strong>：强类型检查、自动内存管理（垃圾回收）等特性</li>\n<li><strong>多线程支持</strong>：内置多线程处理机制</li>\n</ul>',readingTime:{minutes:1.38,words:415},title:"Java基础学习",type:"article"}}],["/programming-languages/python/",{loader:()=>a.e(621).then(a.bind(a,9139)),meta:{date:1757861894e3,excerpt:"\n<p>Python是一种简单易学且功能强大的编程语言，由吉多·范罗苏姆（Guido van Rossum）于1991年创建。Python以其简洁的语法和强大的库支持而闻名，被广泛应用于Web开发、数据分析、人工智能等领域。</p>\n<h2>Python特点</h2>\n<ul>\n<li><strong>易学易用</strong>：语法简洁清晰，代码可读性高</li>\n<li><strong>解释执行</strong>：无需编译，可以直接运行</li>\n<li><strong>丰富的库</strong>：拥有大量的第三方库，适用于各种领域</li>\n<li><strong>跨平台</strong>：可以在Windows、macOS和Linux上运行</li>\n<li><strong>面向对象</strong>：支持面向对象编程，但也支持函数式编程和过程式编程</li>\n</ul>",readingTime:{minutes:1.42,words:427},title:"Python基础学习",type:"article"}}],["/404.html",{loader:()=>a.e(490).then(a.bind(a,9866)),meta:{title:""}}],["/category/",{loader:()=>a.e(583).then(a.bind(a,1623)),meta:{title:"分类",index:!1}}],["/tag/",{loader:()=>a.e(797).then(a.bind(a,8685)),meta:{title:"标签",index:!1}}],["/article/",{loader:()=>a.e(511).then(a.bind(a,1982)),meta:{title:"文章",index:!1}}],["/star/",{loader:()=>a.e(199).then(a.bind(a,5887)),meta:{title:"星标",index:!1}}],["/timeline/",{loader:()=>a.e(464).then(a.bind(a,9322)),meta:{title:"时间轴",index:!1}}]])},8761:(i,s,a)=>{a.d(s,{U:()=>n});const n=JSON.parse('{"base":"/GahooChenBlog/","lang":"zh-CN","title":"GahooChen的个人博客","description":"分享技术，分享快乐","head":[["link",{"rel":"icon","href":"/GahooChenBlog/favicon.ico"}]],"locales":{}}')}},i=>{i.O(0,[363,258],()=>i(i.s=1978)),i.O()}]);